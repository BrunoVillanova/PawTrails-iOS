{"Typealiases.html#/s:8SocketIO11AckCallbacka":{"name":"AckCallback","abstract":"<p>A typealias for an ack callback.</p>"},"Typealiases.html#/s:8SocketIO14NormalCallbacka":{"name":"NormalCallback","abstract":"<p>A typealias for a normal callback.</p>"},"Structs/SocketPacket/PacketType.html#/s:8SocketIO0A6PacketV0C4TypeO7connectA2EmF":{"name":"connect","abstract":"<p>Connect: 0</p>","parent_name":"PacketType"},"Structs/SocketPacket/PacketType.html#/s:8SocketIO0A6PacketV0C4TypeO10disconnectA2EmF":{"name":"disconnect","abstract":"<p>Disconnect: 1</p>","parent_name":"PacketType"},"Structs/SocketPacket/PacketType.html#/s:8SocketIO0A6PacketV0C4TypeO5eventA2EmF":{"name":"event","abstract":"<p>Event: 2</p>","parent_name":"PacketType"},"Structs/SocketPacket/PacketType.html#/s:8SocketIO0A6PacketV0C4TypeO3ackA2EmF":{"name":"ack","abstract":"<p>Ack: 3</p>","parent_name":"PacketType"},"Structs/SocketPacket/PacketType.html#/s:8SocketIO0A6PacketV0C4TypeO5errorA2EmF":{"name":"error","abstract":"<p>Error: 4</p>","parent_name":"PacketType"},"Structs/SocketPacket/PacketType.html#/s:8SocketIO0A6PacketV0C4TypeO11binaryEventA2EmF":{"name":"binaryEvent","abstract":"<p>Binary Event: 5</p>","parent_name":"PacketType"},"Structs/SocketPacket/PacketType.html#/s:8SocketIO0A6PacketV0C4TypeO9binaryAckA2EmF":{"name":"binaryAck","abstract":"<p>Binary Ack: 6</p>","parent_name":"PacketType"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV3nspSSv":{"name":"nsp","abstract":"<p>The namespace for this packet.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV2idSiv":{"name":"id","abstract":"<p>If &gt; 0 then this packet is using acking.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV4typeAC0C4TypeOv":{"name":"type","abstract":"<p>The type of this packet.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV6binarySay10Foundation4DataVGv":{"name":"binary","abstract":"<p>An array of binary data for this packet.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV4dataSayypGv":{"name":"data","abstract":"<p>The data for this event.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV4argsSayypGv":{"name":"args","abstract":"<p>Returns the payload for this packet, minus the event name if this is an event or binaryEvent type packet.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV11descriptionSSv":{"name":"description","abstract":"<p>A string representation of this packet.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV5eventSSv":{"name":"event","abstract":"<p>The event name for this packet.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket.html#/s:8SocketIO0A6PacketV12packetStringSSv":{"name":"packetString","abstract":"<p>A string representation of this packet.</p>","parent_name":"SocketPacket"},"Structs/SocketPacket/PacketType.html":{"name":"PacketType","abstract":"<p>The type of packets.</p>","parent_name":"SocketPacket"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV7Elementa":{"name":"Element","abstract":"<p>Type of element stored.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV5Indexa":{"name":"Index","abstract":"<p>Index type.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV8Iteratora":{"name":"Iterator","abstract":"<p>Iterator type.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV11SubSequencea":{"name":"SubSequence","abstract":"<p>SubSequence type.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV10startIndexSiv":{"name":"startIndex","abstract":"<p>The start index of this collection.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV8endIndexSiv":{"name":"endIndex","abstract":"<p>The end index of this collection.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV7isEmptySbv":{"name":"isEmpty","abstract":"<p>Whether this collection is empty.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV5countSiv":{"name":"count","abstract":"<p>The number of elements stored in this collection.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV5firstAA0aC6OptionOSgv":{"name":"first","abstract":"<p>The first element in this collection.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationVACSayAA0aC6OptionOG12arrayLiterald_tcfc":{"name":"init(arrayLiteral:)","abstract":"<p>Creates a new <code>SocketIOClientConfiguration</code> from an array literal.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV12makeIterators08IndexingF0VySayAA0aC6OptionOGGyF":{"name":"makeIterator()","abstract":"<p>Creates an iterator for this collection.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV5indexS2i5after_tF":{"name":"index(after:)","parent_name":"SocketIOClientConfiguration"},"Structs/SocketIOClientConfiguration.html#/s:8SocketIO0A21IOClientConfigurationV6insertyAA0aC6OptionO_Sb9replacingtF":{"name":"insert(_:replacing:)","abstract":"<p>Special method that inserts <code>element</code> into the collection, replacing any other instances of <code>element</code>.</p>","parent_name":"SocketIOClientConfiguration"},"Structs/SocketEventHandler.html#/s:8SocketIO0A12EventHandlerV5eventSSv":{"name":"event","abstract":"<p>The event for this handler.</p>","parent_name":"SocketEventHandler"},"Structs/SocketEventHandler.html#/s:8SocketIO0A12EventHandlerV2id10Foundation4UUIDVv":{"name":"id","abstract":"<p>A unique identifier for this handler.</p>","parent_name":"SocketEventHandler"},"Structs/SocketEventHandler.html#/s:8SocketIO0A12EventHandlerV8callbackySayypG_AA0A10AckEmitterCtcv":{"name":"callback","abstract":"<p>The actual handler function.</p>","parent_name":"SocketEventHandler"},"Structs/SocketEventHandler.html#/s:8SocketIO0A12EventHandlerV15executeCallbackySayypG4with_Si0G3AckAA0A8IOClientC0gA0tF":{"name":"executeCallback(with:withAck:withSocket:)","abstract":"<p>Causes this handler to be executed.</p>","parent_name":"SocketEventHandler"},"Structs/SocketEventHandler.html":{"name":"SocketEventHandler","abstract":"<p>A wrapper around a handler.</p>"},"Structs/SocketIOClientConfiguration.html":{"name":"SocketIOClientConfiguration","abstract":"<p>An array-like type that holds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SocketIOClientOption.html\">SocketIOClientOption</a></code>s</p>"},"Structs/SocketPacket.html":{"name":"SocketPacket","abstract":"<p>A struct that represents a socket.io packet.</p>"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)defaultSocket":{"name":"defaultSocket","abstract":"<p>Returns the socket associated with the default namespace (<q>/</q>).</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)engine":{"name":"engine","abstract":"<p>The engine for this manager.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)forceNew":{"name":"forceNew","abstract":"<p>If <code>true</code> then every time <code>connect</code> is called, a new engine will be created.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)handleQueue":{"name":"handleQueue","abstract":"<p>The queue that all interaction with the client should occur on. This is the queue that event handlers are","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)nsps":{"name":"nsps","abstract":"<p>The sockets in this manager indexed by namespace.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)reconnects":{"name":"reconnects","abstract":"<p>If <code>true</code>, this manager will try and reconnect on any disconnects.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)reconnectWait":{"name":"reconnectWait","abstract":"<p>The number of seconds to wait before attempting to reconnect.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)socketURL":{"name":"socketURL","abstract":"<p>The URL of the socket.io server.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(py)status":{"name":"status","abstract":"<p>The status of this manager.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)connect":{"name":"connect()","abstract":"<p>Connects the underlying transport.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)connectSocket:":{"name":"connectSocket(_:)","abstract":"<p>Connects a socket through this manager&rsquo;s engine.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)didDisconnectWithReason:":{"name":"didDisconnect(reason:)","abstract":"<p>Called when the manager has disconnected from socket.io.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnects the manager and all associated sockets.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)disconnectSocket:":{"name":"disconnectSocket(_:)","abstract":"<p>Disconnects the given socket.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)disconnectSocketForNamespace:":{"name":"disconnectSocket(forNamespace:)","abstract":"<p>Disconnects the socket associated with <code>forNamespace</code>.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)emitAll:withItems:":{"name":"emitAll(_:withItems:)","abstract":"<p>Sends an event to the server on all namespaces in this manager.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)reconnect":{"name":"reconnect()","abstract":"<p>Tries to reconnect to the server.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)removeSocket:":{"name":"removeSocket(_:)","abstract":"<p>Removes the socket from the manager&rsquo;s control.","parent_name":"SocketManagerSpec"},"Protocols/SocketManagerSpec.html#/c:@M@SocketIO@objc(pl)SocketManagerSpec(im)socketForNamespace:":{"name":"socket(forNamespace:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SocketIOClient.html\">SocketIOClient</a></code> for the given namespace. This socket shares a transport with the manager.</p>","parent_name":"SocketManagerSpec"},"Protocols/SocketDataBufferable.html#/s:8SocketIO0A14DataBufferableP14waitingPacketsSayAA0A6PacketVGv":{"name":"waitingPackets","abstract":"<p>A list of packets that are waiting for binary data.</p>","parent_name":"SocketDataBufferable"},"Protocols/SocketParsable.html#/s:8SocketIO0A8ParsableP15parseBinaryDataAA0A6PacketVSg10Foundation0F0VF":{"name":"parseBinaryData(_:)","abstract":"<p>Called when the engine has received some binary data that should be attached to a packet.</p>","parent_name":"SocketParsable"},"Protocols/SocketParsable.html#/s:8SocketIO0A8ParsableP05parseA7MessageAA0A6PacketVSgSSF":{"name":"parseSocketMessage(_:)","abstract":"<p>Called when the engine has received a string that should be parsed into a socket.io packet.</p>","parent_name":"SocketParsable"},"Protocols/SocketLogger.html#/s:8SocketIO0A6LoggerP3logSbv":{"name":"log","abstract":"<p>Whether to log or not</p>","parent_name":"SocketLogger"},"Protocols/SocketLogger.html#/s:8SocketIO0A6LoggerP3logySSyXK_SS4typetF":{"name":"log(_:type:)","abstract":"<p>Normal log messages</p>","parent_name":"SocketLogger"},"Protocols/SocketLogger.html#/s:8SocketIO0A6LoggerP5errorySSyXK_SS4typetF":{"name":"error(_:type:)","abstract":"<p>Error Messages</p>","parent_name":"SocketLogger"},"Protocols/SocketData.html#/s:8SocketIO0A4DataP20socketRepresentationAaB_pyKF":{"name":"socketRepresentation()","abstract":"<p>A representation of self that can sent over socket.io.</p>","parent_name":"SocketData"},"Protocols/ConfigSettable.html#/s:8SocketIO14ConfigSettableP10setConfigsyAA0A21IOClientConfigurationVF":{"name":"setConfigs(_:)","abstract":"<p>Called when an <code>ConfigSettable</code> should set/update its configs from a given configuration.</p>","parent_name":"ConfigSettable"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP10anyHandleryAA0A8AnyEventCcSgv":{"name":"anyHandler","abstract":"<p>A handler that will be called on any event.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP8handlersSayAA0A12EventHandlerVGv":{"name":"handlers","abstract":"<p>The array of handlers for this socket.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP7managerAA0a7ManagerD0_pSgv":{"name":"manager","abstract":"<p>The manager for this socket.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP3nspSSv":{"name":"nsp","abstract":"<p>The namespace that this socket is currently connected to.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP6statusAA0A8IOStatusOv":{"name":"status","abstract":"<p>The status of this client.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP7connectyyF":{"name":"connect()","abstract":"<p>Connect to the server. The same as calling <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP7connectySd12timeoutAfter_yycSg11withHandlertF\">connect(timeoutAfter:withHandler:)</a></code> with a timeout of 0.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP7connectySd12timeoutAfter_yycSg11withHandlertF":{"name":"connect(timeoutAfter:withHandler:)","abstract":"<p>Connect to the server. If we aren&rsquo;t connected after <code>timeoutAfter</code> seconds, then <code>withHandler</code> is called.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP10didConnectySS11toNamespace_tF":{"name":"didConnect(toNamespace:)","abstract":"<p>Called when the client connects to a namespace. If the client was created with a namespace upfront,","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP13didDisconnectySS6reason_tF":{"name":"didDisconnect(reason:)","abstract":"<p>Called when the client has disconnected from socket.io.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP8didErrorySS6reason_tF":{"name":"didError(reason:)","abstract":"<p>Called when the client encounters an error.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP10disconnectyyF":{"name":"disconnect()","abstract":"<p>Disconnects the socket.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP4emitySS_SayAA0A4Data_pGdtF":{"name":"emit(_:_:)","abstract":"<p>Send an event to the server, with optional data items.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP7emitAckySi_SayypG4withtF":{"name":"emitAck(_:with:)","abstract":"<p>Call when you wish to tell the server that you&rsquo;ve received the event for <code>ack</code>.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP11emitWithAckAA02OnG8CallbackCSS_SayAA0A4Data_pGdtF":{"name":"emitWithAck(_:_:)","abstract":"<p>Sends a message to the server, requesting an ack.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP9handleAckySi_SayypG4datatF":{"name":"handleAck(_:data:)","abstract":"<p>Called when socket.io has acked one of our emits. Causes the corresponding ack callback to be called.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP17handleClientEventyAA0afG0O_SayypG4datatF":{"name":"handleClientEvent(_:data:)","abstract":"<p>Called on socket.io specific events.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP11handleEventySS_SayypG4dataSb17isInternalMessageSi7withAcktF":{"name":"handleEvent(_:data:isInternalMessage:withAck:)","abstract":"<p>Called when we get an event from socket.io.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP12handlePacketyAA0aF0VF":{"name":"handlePacket(_:)","abstract":"<p>Causes a client to handle a socket.io packet. The namespace for the packet must match the namespace of the","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP14leaveNamespaceyyF":{"name":"leaveNamespace()","abstract":"<p>Call when you wish to leave a namespace and disconnect this socket.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP13joinNamespaceyyF":{"name":"joinNamespace()","abstract":"<p>Joins <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP3nspSSv\">nsp</a></code>.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP3offyAA0A11ClientEventO06clientG0_tF":{"name":"off(clientEvent:)","abstract":"<p>Removes handler(s) for a client event.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP3offySSF":{"name":"off(_:)","abstract":"<p>Removes handler(s) based on an event name.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP3offy10Foundation4UUIDV2id_tF":{"name":"off(id:)","abstract":"<p>Removes a handler with the specified UUID gotten from an <code>on</code> or <code>once</code></p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP2on10Foundation4UUIDVSS_ySayypG_AA0A10AckEmitterCtc8callbacktF":{"name":"on(_:callback:)","abstract":"<p>Adds a handler for an event.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP2on10Foundation4UUIDVAA0A11ClientEventO06clientI0_ySayypG_AA0A10AckEmitterCtc8callbacktF":{"name":"on(clientEvent:callback:)","abstract":"<p>Adds a handler for a client event.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP4once10Foundation4UUIDVAA0A11ClientEventO06clientI0_ySayypG_AA0A10AckEmitterCtc8callbacktF":{"name":"once(clientEvent:callback:)","abstract":"<p>Adds a single-use handler for a client event.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP4once10Foundation4UUIDVSS_ySayypG_AA0A10AckEmitterCtc8callbacktF":{"name":"once(_:callback:)","abstract":"<p>Adds a single-use handler for an event.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP5onAnyyyAA0aF5EventCcF":{"name":"onAny(_:)","abstract":"<p>Adds a handler that will be called on every event.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP17removeAllHandlersyyF":{"name":"removeAllHandlers()","abstract":"<p>Removes all handlers.</p>","parent_name":"SocketIOClientSpec"},"Protocols/SocketIOClientSpec.html#/s:8SocketIO0A12IOClientSpecP15setReconnectingySS6reason_tF":{"name":"setReconnecting(reason:)","abstract":"<p>Puts the socket back into the connecting state.","parent_name":"SocketIOClientSpec"},"Protocols/SocketEngineWebsocket.html#/s:8SocketIO0A15EngineWebsocketP07sendWebA7MessageySS_AA0aC10PacketTypeO04withI0Say10Foundation4DataVG0jL0tF":{"name":"sendWebSocketMessage(_:withType:withData:)","abstract":"<p>Sends an engine.io message through the WebSocket transport.</p>","parent_name":"SocketEngineWebsocket"},"Protocols/SocketEngineWebsocket.html#/s:8SocketIO0A15EngineWebsocketPAAE26websocketDidReceiveMessagey10Starscream03WebA6Client_p6socket_SS4texttF":{"name":"websocketDidReceiveMessage(socket:text:)","abstract":"<p>Delegate method for when a message is received.</p>","parent_name":"SocketEngineWebsocket"},"Protocols/SocketEngineWebsocket.html#/s:8SocketIO0A15EngineWebsocketPAAE23websocketDidReceiveDatay10Starscream03WebA6Client_p6socket_10Foundation0H0V4datatF":{"name":"websocketDidReceiveData(socket:data:)","abstract":"<p>Delegate method for when binary is received.</p>","parent_name":"SocketEngineWebsocket"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP11invalidatedSbv":{"name":"invalidated","abstract":"<p><code>true</code> If engine&rsquo;s session has been invalidated.</p>","parent_name":"SocketEnginePollable"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP8postWaitSaySSGv":{"name":"postWait","abstract":"<p>A queue of engine.io messages waiting for POSTing</p>","parent_name":"SocketEnginePollable"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP7sessionSo10URLSessionCSgv":{"name":"session","abstract":"<p>The URLSession that will be used for polling.</p>","parent_name":"SocketEnginePollable"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP14waitingForPollSbv":{"name":"waitingForPoll","abstract":"<p><code>true</code> if there is an outstanding poll. Trying to poll before the first is done will cause socket.io to","parent_name":"SocketEnginePollable"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP14waitingForPostSbv":{"name":"waitingForPost","abstract":"<p><code>true</code> if there is an outstanding post. Trying to post before the first is done will cause socket.io to","parent_name":"SocketEnginePollable"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP6doPollyyF":{"name":"doPoll()","abstract":"<p>Call to send a long-polling request.</p>","parent_name":"SocketEnginePollable"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP15sendPollMessageySS_AA0aC10PacketTypeO04withI0Say10Foundation4DataVG0jL0tF":{"name":"sendPollMessage(_:withType:withData:)","abstract":"<p>Sends an engine.io message through the polling transport.</p>","parent_name":"SocketEnginePollable"},"Protocols/SocketEnginePollable.html#/s:8SocketIO0A14EnginePollableP11stopPollingyyF":{"name":"stopPolling()","abstract":"<p>Call to stop polling and invalidate the URLSession.</p>","parent_name":"SocketEnginePollable"},"Protocols/SocketEngineClient.html#/c:@M@SocketIO@objc(pl)SocketEngineClient(im)engineDidErrorWithReason:":{"name":"engineDidError(reason:)","abstract":"<p>Called when the engine errors.</p>","parent_name":"SocketEngineClient"},"Protocols/SocketEngineClient.html#/c:@M@SocketIO@objc(pl)SocketEngineClient(im)engineDidCloseWithReason:":{"name":"engineDidClose(reason:)","abstract":"<p>Called when the engine closes.</p>","parent_name":"SocketEngineClient"},"Protocols/SocketEngineClient.html#/c:@M@SocketIO@objc(pl)SocketEngineClient(im)engineDidOpenWithReason:":{"name":"engineDidOpen(reason:)","abstract":"<p>Called when the engine opens.</p>","parent_name":"SocketEngineClient"},"Protocols/SocketEngineClient.html#/c:@M@SocketIO@objc(pl)SocketEngineClient(im)engineDidReceivePong":{"name":"engineDidReceivePong()","abstract":"<p>Called when the engine receives a pong message.</p>","parent_name":"SocketEngineClient"},"Protocols/SocketEngineClient.html#/c:@M@SocketIO@objc(pl)SocketEngineClient(im)engineDidSendPing":{"name":"engineDidSendPing()","abstract":"<p>Called when the engine sends a ping to the server.</p>","parent_name":"SocketEngineClient"},"Protocols/SocketEngineClient.html#/c:@M@SocketIO@objc(pl)SocketEngineClient(im)parseEngineMessage:":{"name":"parseEngineMessage(_:)","abstract":"<p>Called when the engine has a message that must be parsed.</p>","parent_name":"SocketEngineClient"},"Protocols/SocketEngineClient.html#/c:@M@SocketIO@objc(pl)SocketEngineClient(im)parseEngineBinaryData:":{"name":"parseEngineBinaryData(_:)","abstract":"<p>Called when the engine receives binary data.</p>","parent_name":"SocketEngineClient"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)client":{"name":"client","abstract":"<p>The client for this engine.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)closed":{"name":"closed","abstract":"<p><code>true</code> if this engine is closed.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)compress":{"name":"compress","abstract":"<p>If <code>true</code> the engine will attempt to use WebSocket compression.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)connected":{"name":"connected","abstract":"<p><code>true</code> if this engine is connected. Connected means that the initial poll connect has succeeded.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)connectParams":{"name":"connectParams","abstract":"<p>The connect parameters sent during a connect.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)cookies":{"name":"cookies","abstract":"<p>An array of HTTPCookies that are sent during the connection.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)engineQueue":{"name":"engineQueue","abstract":"<p>The queue that all engine actions take place on.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)extraHeaders":{"name":"extraHeaders","abstract":"<p>A dictionary of extra http headers that will be set during connection.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)fastUpgrade":{"name":"fastUpgrade","abstract":"<p>When <code>true</code>, the engine is in the process of switching to WebSockets.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)forcePolling":{"name":"forcePolling","abstract":"<p>When <code>true</code>, the engine will only use HTTP long-polling as a transport.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)forceWebsockets":{"name":"forceWebsockets","abstract":"<p>When <code>true</code>, the engine will only use WebSockets as a transport.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)polling":{"name":"polling","abstract":"<p>If <code>true</code>, the engine is currently in HTTP long-polling mode.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)probing":{"name":"probing","abstract":"<p>If <code>true</code>, the engine is currently seeing whether it can upgrade to WebSockets.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)sid":{"name":"sid","abstract":"<p>The session id for this engine.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)socketPath":{"name":"socketPath","abstract":"<p>The path to engine.io.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)urlPolling":{"name":"urlPolling","abstract":"<p>The url for polling.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)urlWebSocket":{"name":"urlWebSocket","abstract":"<p>The url for WebSockets.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)websocket":{"name":"websocket","abstract":"<p>If <code>true</code>, then the engine is currently in WebSockets mode.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(py)ws":{"name":"ws","abstract":"<p>The WebSocket for this engine.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)initWithClient:url:options:":{"name":"init(client:url:options:)","abstract":"<p>Creates a new engine.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)connect":{"name":"connect()","abstract":"<p>Starts the connection to the server.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)didErrorWithReason:":{"name":"didError(reason:)","abstract":"<p>Called when an error happens during execution. Causes a disconnection.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)disconnectWithReason:":{"name":"disconnect(reason:)","abstract":"<p>Disconnects from the server.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)doFastUpgrade":{"name":"doFastUpgrade()","abstract":"<p>Called to switch from HTTP long-polling to WebSockets. After calling this method the engine will be in","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)flushWaitingForPostToWebSocket":{"name":"flushWaitingForPostToWebSocket()","abstract":"<p>Causes any packets that were waiting for POSTing to be sent through the WebSocket. This happens because when","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)parseEngineData:":{"name":"parseEngineData(_:)","abstract":"<p>Parses raw binary received from engine.io.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)parseEngineMessage:":{"name":"parseEngineMessage(_:)","abstract":"<p>Parses a raw engine.io packet.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html#/c:@M@SocketIO@objc(pl)SocketEngineSpec(im)write:withType:withData:":{"name":"write(_:withType:withData:)","abstract":"<p>Writes a message to engine.io, independent of transport.</p>","parent_name":"SocketEngineSpec"},"Protocols/SocketEngineSpec.html":{"name":"SocketEngineSpec","abstract":"<p>Specifies a SocketEngine.</p>"},"Protocols/SocketEngineClient.html":{"name":"SocketEngineClient","abstract":"<p>Declares that a type will be a delegate to an engine.</p>"},"Protocols/SocketEnginePollable.html":{"name":"SocketEnginePollable","abstract":"<p>Protocol that is used to implement socket.io polling support</p>"},"Protocols/SocketEngineWebsocket.html":{"name":"SocketEngineWebsocket","abstract":"<p>Protocol that is used to implement socket.io WebSocket support</p>"},"Protocols/SocketIOClientSpec.html":{"name":"SocketIOClientSpec","abstract":"<p>Defines the interface for a SocketIOClient.</p>"},"Protocols/ConfigSettable.html":{"name":"ConfigSettable","abstract":"<p>Declares that a type can set configs from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SocketIOClientConfiguration.html\">SocketIOClientConfiguration</a></code>.</p>"},"Protocols/SocketData.html":{"name":"SocketData","abstract":"<p>A marking protocol that says a type can be represented in a socket.io packet.</p>"},"Protocols/SocketLogger.html":{"name":"SocketLogger","abstract":"<p>Represents a class will log client events.</p>"},"Protocols/SocketParsable.html":{"name":"SocketParsable","abstract":"<p>Defines that a type will be able to parse socket.io-protocol messages.</p>"},"Protocols/SocketDataBufferable.html":{"name":"SocketDataBufferable","abstract":"<p>Says that a type will be able to buffer binary data before all data for an event has come in.</p>"},"Protocols/SocketManagerSpec.html":{"name":"SocketManagerSpec","abstract":"<p>A manager for a socket.io connection.</p>"},"Enums/SocketParsableError.html#/s:8SocketIO0A13ParsableErrorO16invalidDataArrayA2CmF":{"name":"invalidDataArray","abstract":"<p>Thrown when a packet received has an invalid data array, or is missing the data array.</p>","parent_name":"SocketParsableError"},"Enums/SocketParsableError.html#/s:8SocketIO0A13ParsableErrorO13invalidPacketA2CmF":{"name":"invalidPacket","abstract":"<p>Thrown when an malformed packet is received.</p>","parent_name":"SocketParsableError"},"Enums/SocketParsableError.html#/s:8SocketIO0A13ParsableErrorO17invalidPacketTypeA2CmF":{"name":"invalidPacketType","abstract":"<p>Thrown when the parser receives an unknown packet type.</p>","parent_name":"SocketParsableError"},"Enums/SocketIOStatus.html#/c:@M@SocketIO@E@SocketIOStatus@SocketIOStatusNotConnected":{"name":"notConnected","abstract":"<p>The client/manager has never been connected. Or the client has been reset.</p>","parent_name":"SocketIOStatus"},"Enums/SocketIOStatus.html#/c:@M@SocketIO@E@SocketIOStatus@SocketIOStatusDisconnected":{"name":"disconnected","abstract":"<p>The client/manager was once connected, but not anymore.</p>","parent_name":"SocketIOStatus"},"Enums/SocketIOStatus.html#/c:@M@SocketIO@E@SocketIOStatus@SocketIOStatusConnecting":{"name":"connecting","abstract":"<p>The client/manager is in the process of connecting.</p>","parent_name":"SocketIOStatus"},"Enums/SocketIOStatus.html#/c:@M@SocketIO@E@SocketIOStatus@SocketIOStatusConnected":{"name":"connected","abstract":"<p>The client/manager is currently connected.</p>","parent_name":"SocketIOStatus"},"Enums/SocketIOStatus.html#/s:8SocketIO0A8IOStatusO6activeSbv":{"name":"active","parent_name":"SocketIOStatus"},"Enums/SocketIOStatus.html#/s:s23CustomStringConvertibleP11descriptionSSv":{"name":"description","parent_name":"SocketIOStatus"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO8compressA2CmF":{"name":"compress","abstract":"<p>If given, the WebSocket transport will attempt to use compression.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO13connectParamsACs10DictionaryVySSypGcACmF":{"name":"connectParams","abstract":"<p>A dictionary of GET parameters that will be included in the connect url.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO7cookiesACSaySo10HTTPCookieCGcACmF":{"name":"cookies","abstract":"<p>An array of cookies that will be sent during the initial connection.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO12extraHeadersACs10DictionaryVyS2SGcACmF":{"name":"extraHeaders","abstract":"<p>Any extra HTTP headers that should be sent during the initial connection.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO8forceNewACSbcACmF":{"name":"forceNew","abstract":"<p>If passed <code>true</code>, will cause the client to always create a new engine. Useful for debugging,","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO12forcePollingACSbcACmF":{"name":"forcePolling","abstract":"<p>If passed <code>true</code>, the only transport that will be used will be HTTP long-polling.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO15forceWebsocketsACSbcACmF":{"name":"forceWebsockets","abstract":"<p>If passed <code>true</code>, the only transport that will be used will be WebSockets.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO11handleQueueACSo08DispatchF0CcACmF":{"name":"handleQueue","abstract":"<p>The queue that all interaction with the client should occur on. This is the queue that event handlers are","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO3logACSbcACmF":{"name":"log","abstract":"<p>If passed <code>true</code>, the client will log debug information. This should be turned off in production code.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO6loggerAcA0A6Logger_pcACmF":{"name":"logger","abstract":"<p>Used to pass in a custom logger.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO4pathACSScACmF":{"name":"path","abstract":"<p>A custom path to socket.io. Only use this if the socket.io server is configured to look for this path.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO10reconnectsACSbcACmF":{"name":"reconnects","abstract":"<p>If passed <code>false</code>, the client will not reconnect when it loses connection. Useful if you want full control","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO17reconnectAttemptsACSicACmF":{"name":"reconnectAttempts","abstract":"<p>The number of times to try and reconnect before giving up. Pass <code>-1</code> to <a href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">never give up</a>.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO13reconnectWaitACSicACmF":{"name":"reconnectWait","abstract":"<p>The number of seconds to wait before reconnect attempts.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO6secureACSbcACmF":{"name":"secure","abstract":"<p>Set <code>true</code> if your server is using secure transports.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO8securityAcA11SSLSecurityCcACmF":{"name":"security","abstract":"<p>Allows you to set which certs are valid. Useful for SSL pinning.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO10selfSignedACSbcACmF":{"name":"selfSigned","abstract":"<p>If you&rsquo;re using a self-signed set. Only use for development.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO15sessionDelegateACSo010URLSessionF0_pcACmF":{"name":"sessionDelegate","abstract":"<p>Sets an NSURLSessionDelegate for the underlying engine. Useful if you need to handle self-signed certs.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO11descriptionSSv":{"name":"description","abstract":"<p>The description of this option.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketIOClientOption.html#/s:8SocketIO0A14IOClientOptionO2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares whether two options are the same.</p>","parent_name":"SocketIOClientOption"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO7connectA2CmF":{"name":"connect","abstract":"<p>Emitted when the client connects. This is also called on a successful reconnection. A connect event gets one","parent_name":"SocketClientEvent"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO10disconnectA2CmF":{"name":"disconnect","abstract":"<p>Emitted when the socket has disconnected and will not attempt to try to reconnect.</p>","parent_name":"SocketClientEvent"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO5errorA2CmF":{"name":"error","abstract":"<p>Emitted when an error occurs.</p>","parent_name":"SocketClientEvent"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO4pingA2CmF":{"name":"ping","abstract":"<p>Emitted whenever the engine sends a ping.</p>","parent_name":"SocketClientEvent"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO4pongA2CmF":{"name":"pong","abstract":"<p>Emitted whenever the engine gets a pong.</p>","parent_name":"SocketClientEvent"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO9reconnectA2CmF":{"name":"reconnect","abstract":"<p>Emitted when the client begins the reconnection process.</p>","parent_name":"SocketClientEvent"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO16reconnectAttemptA2CmF":{"name":"reconnectAttempt","abstract":"<p>Emitted each time the client tries to reconnect to the server.</p>","parent_name":"SocketClientEvent"},"Enums/SocketClientEvent.html#/s:8SocketIO0A11ClientEventO12statusChangeA2CmF":{"name":"statusChange","abstract":"<p>Emitted every time there is a change in the client&rsquo;s status.</p>","parent_name":"SocketClientEvent"},"Enums/SocketAckStatus.html#/s:8SocketIO0A9AckStatusO02noC0A2CmF":{"name":"noAck","abstract":"<p>The ack timed out.</p>","parent_name":"SocketAckStatus"},"Enums/SocketEnginePacketType.html#/c:@M@SocketIO@E@SocketEnginePacketType@SocketEnginePacketTypeOpen":{"name":"open","abstract":"<p>Open message.</p>","parent_name":"SocketEnginePacketType"},"Enums/SocketEnginePacketType.html#/c:@M@SocketIO@E@SocketEnginePacketType@SocketEnginePacketTypeClose":{"name":"close","abstract":"<p>Close message.</p>","parent_name":"SocketEnginePacketType"},"Enums/SocketEnginePacketType.html#/c:@M@SocketIO@E@SocketEnginePacketType@SocketEnginePacketTypePing":{"name":"ping","abstract":"<p>Ping message.</p>","parent_name":"SocketEnginePacketType"},"Enums/SocketEnginePacketType.html#/c:@M@SocketIO@E@SocketEnginePacketType@SocketEnginePacketTypePong":{"name":"pong","abstract":"<p>Pong message.</p>","parent_name":"SocketEnginePacketType"},"Enums/SocketEnginePacketType.html#/c:@M@SocketIO@E@SocketEnginePacketType@SocketEnginePacketTypeMessage":{"name":"message","abstract":"<p>Regular message.</p>","parent_name":"SocketEnginePacketType"},"Enums/SocketEnginePacketType.html#/c:@M@SocketIO@E@SocketEnginePacketType@SocketEnginePacketTypeUpgrade":{"name":"upgrade","abstract":"<p>Upgrade message.</p>","parent_name":"SocketEnginePacketType"},"Enums/SocketEnginePacketType.html#/c:@M@SocketIO@E@SocketEnginePacketType@SocketEnginePacketTypeNoop":{"name":"noop","abstract":"<p>NOOP.</p>","parent_name":"SocketEnginePacketType"},"Enums/SocketEnginePacketType.html":{"name":"SocketEnginePacketType","abstract":"<p>Represents the type of engine.io packet types.</p>"},"Enums/SocketAckStatus.html":{"name":"SocketAckStatus","abstract":"<p>The status of an ack.</p>"},"Enums/SocketClientEvent.html":{"name":"SocketClientEvent","abstract":"<p>The set of events that are generated by the client.</p>"},"Enums/SocketIOClientOption.html":{"name":"SocketIOClientOption","abstract":"<p>The options for a client.</p>"},"Enums/SocketIOStatus.html":{"name":"SocketIOStatus","abstract":"<p>Represents state of a manager or client.</p>"},"Enums/SocketParsableError.html":{"name":"SocketParsableError","abstract":"<p>Errors that can be thrown during parsing.</p>"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)defaultSocket":{"name":"defaultSocket","abstract":"<p>The socket associated with the default namespace (<q>/</q>).</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)socketURL":{"name":"socketURL","abstract":"<p>The URL of the socket.io server.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/s:8SocketIO0A7ManagerC6configAA0A21IOClientConfigurationVv":{"name":"config","abstract":"<p>The configuration for this client.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)engine":{"name":"engine","abstract":"<p>The engine for this manager.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)forceNew":{"name":"forceNew","abstract":"<p>If <code>true</code> then every time <code>connect</code> is called, a new engine will be created.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)handleQueue":{"name":"handleQueue","abstract":"<p>The queue that all interaction with the client should occur on. This is the queue that event handlers are","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)nsps":{"name":"nsps","abstract":"<p>The sockets in this manager indexed by namespace.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)reconnects":{"name":"reconnects","abstract":"<p>If <code>true</code>, this client will try and reconnect on any disconnects.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)reconnectWait":{"name":"reconnectWait","abstract":"<p>The number of seconds to wait before attempting to reconnect.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)status":{"name":"status","abstract":"<p>The status of this manager.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/s:8SocketIO0A7ManagerC14waitingPacketsSayAA0A6PacketVGv":{"name":"waitingPackets","abstract":"<p>A list of packets that are waiting for binary data.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/s:8SocketIO0A7ManagerCAC10Foundation3URLV06socketE0_AA0A21IOClientConfigurationV6configtcfc":{"name":"init(socketURL:config:)","abstract":"<p>Type safe way to create a new SocketIOClient. <code>opts</code> can be omitted.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)initWithSocketURL:config:":{"name":"init(socketURL:config:)","abstract":"<p>Not so type safe way to create a SocketIOClient, meant for Objective-C compatiblity.","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)connect":{"name":"connect()","abstract":"<p>Connects the underlying transport and the default namespace socket.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)connectSocket:":{"name":"connectSocket(_:)","abstract":"<p>Connects a socket through this manager&rsquo;s engine.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)didDisconnectWithReason:":{"name":"didDisconnect(reason:)","abstract":"<p>Called when the manager has disconnected from socket.io.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnects the manager and all associated sockets.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)disconnectSocket:":{"name":"disconnectSocket(_:)","abstract":"<p>Disconnects the given socket.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)disconnectSocketForNamespace:":{"name":"disconnectSocket(forNamespace:)","abstract":"<p>Disconnects the socket associated with <code>forNamespace</code>.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/s:8SocketIO0A7ManagerC7emitAllyAA0A11ClientEventO06clientG0_SayypG4datatF":{"name":"emitAll(clientEvent:data:)","abstract":"<p>Sends a client event to all sockets in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(py)nsps\">nsps</a></code></p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/s:8SocketIO0A7ManagerC7emitAllySS_SayAA0A4Data_pGdtF":{"name":"emitAll(_:_:)","abstract":"<p>Sends an event to the server on all namespaces in this manager.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)emitAll:withItems:":{"name":"emitAll(_:withItems:)","abstract":"<p>Sends an event to the server on all namespaces in this manager.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)engineDidCloseWithReason:":{"name":"engineDidClose(reason:)","abstract":"<p>Called when the engine closes.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)engineDidErrorWithReason:":{"name":"engineDidError(reason:)","abstract":"<p>Called when the engine errors.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)engineDidOpenWithReason:":{"name":"engineDidOpen(reason:)","abstract":"<p>Called when the engine opens.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)engineDidReceivePong":{"name":"engineDidReceivePong()","abstract":"<p>Called when the engine receives a pong message.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)engineDidSendPing":{"name":"engineDidSendPing()","abstract":"<p>Called when the sends a ping to the server.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)parseEngineMessage:":{"name":"parseEngineMessage(_:)","abstract":"<p>Called when the engine has a message that must be parsed.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)parseEngineBinaryData:":{"name":"parseEngineBinaryData(_:)","abstract":"<p>Called when the engine receives binary data.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)reconnect":{"name":"reconnect()","abstract":"<p>Tries to reconnect to the server.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)removeSocket:":{"name":"removeSocket(_:)","abstract":"<p>Removes the socket from the manager&rsquo;s control. One of the disconnect methods should be called before calling this","parent_name":"SocketManager"},"Classes/SocketManager.html#/s:8SocketIO0A7ManagerC10setConfigsyAA0A21IOClientConfigurationVF":{"name":"setConfigs(_:)","abstract":"<p>Sets manager specific configs.</p>","parent_name":"SocketManager"},"Classes/SocketManager.html#/c:@M@SocketIO@objc(cs)SocketManager(im)socketForNamespace:":{"name":"socket(forNamespace:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SocketIOClient.html\">SocketIOClient</a></code> for the given namespace. This socket shares a transport with the manager.</p>","parent_name":"SocketManager"},"Classes/SSLSecurity.html#/s:8SocketIO11SSLSecurityC8security10StarscreamABCv":{"name":"security","abstract":"<p>The internal Starscream SSLSecurity.</p>","parent_name":"SSLSecurity"},"Classes/SSLSecurity.html#/c:@M@SocketIO@objc(cs)SSLSecurity(im)initWithUsePublicKeys:":{"name":"init(usePublicKeys:)","abstract":"<p>Creates a new SSLSecurity that specifies whether to use publicKeys or certificates should be used for SSL","parent_name":"SSLSecurity"},"Classes/SSLSecurity.html#/s:8SocketIO11SSLSecurityCACSay10Starscream7SSLCertCG5certs_Sb13usePublicKeystcfc":{"name":"init(certs:usePublicKeys:)","abstract":"<p>Designated init</p>","parent_name":"SSLSecurity"},"Classes/SSLSecurity.html#/s:8SocketIO11SSLSecurityC7isValidSbSo8SecTrustC_SSSg6domaintF":{"name":"isValid(_:domain:)","abstract":"<p>Returns whether or not the given trust is valid.</p>","parent_name":"SSLSecurity"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(py)nsp":{"name":"nsp","abstract":"<p>The namespace that this socket is currently connected to.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(py)sid":{"name":"sid","abstract":"<p>The session id of this client.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC10anyHandleryAA0A8AnyEventCcSgv":{"name":"anyHandler","abstract":"<p>A handler that will be called on any event.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC8handlersSayAA0A12EventHandlerVGv":{"name":"handlers","abstract":"<p>The array of handlers for this socket.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(py)manager":{"name":"manager","abstract":"<p>The manager for this socket.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(py)status":{"name":"status","abstract":"<p>The status of this client.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)initWithManager:nsp:":{"name":"init(manager:nsp:)","abstract":"<p>Type safe way to create a new SocketIOClient. <code>opts</code> can be omitted.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)connect":{"name":"connect()","abstract":"<p>Connect to the server. The same as calling <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)connectWithTimeoutAfter:withHandler:\">connect(timeoutAfter:withHandler:)</a></code> with a timeout of 0.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)connectWithTimeoutAfter:withHandler:":{"name":"connect(timeoutAfter:withHandler:)","abstract":"<p>Connect to the server. If we aren&rsquo;t connected after <code>timeoutAfter</code> seconds, then <code>withHandler</code> is called.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC10didConnectySS11toNamespace_tF":{"name":"didConnect(toNamespace:)","abstract":"<p>Called when the client connects to a namespace. If the client was created with a namespace upfront,","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC13didDisconnectySS6reason_tF":{"name":"didDisconnect(reason:)","abstract":"<p>Called when the client has disconnected from socket.io.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnects the socket.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC4emitySS_SayAA0A4Data_pGdtF":{"name":"emit(_:_:)","abstract":"<p>Send an event to the server, with optional data items.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)emit:with:":{"name":"emit(_:with:)","abstract":"<p>Same as emit, but meant for Objective-C</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC11emitWithAckAA02OnF8CallbackCSS_SayAA0A4Data_pGdtF":{"name":"emitWithAck(_:_:)","abstract":"<p>Sends a message to the server, requesting an ack.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)emitWithAck:with:":{"name":"emitWithAck(_:with:)","abstract":"<p>Same as emitWithAck, but for Objective-C</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC7emitAckySi_SayypG4withtF":{"name":"emitAck(_:with:)","abstract":"<p>Call when you wish to tell the server that you&rsquo;ve received the event for <code>ack</code>.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)handleAck:data:":{"name":"handleAck(_:data:)","abstract":"<p>Called when socket.io has acked one of our emits. Causes the corresponding ack callback to be called.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC17handleClientEventyAA0aeF0O_SayypG4datatF":{"name":"handleClientEvent(_:data:)","abstract":"<p>Called on socket.io specific events.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)handleEvent:data:isInternalMessage:withAck:":{"name":"handleEvent(_:data:isInternalMessage:withAck:)","abstract":"<p>Called when we get an event from socket.io.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC12handlePacketyAA0aE0VF":{"name":"handlePacket(_:)","abstract":"<p>Causes a client to handle a socket.io packet. The namespace for the packet must match the namespace of the","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)leaveNamespace":{"name":"leaveNamespace()","abstract":"<p>Call when you wish to leave a namespace and disconnect this socket.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)joinNamespace":{"name":"joinNamespace()","abstract":"<p>Joins <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(py)nsp\">nsp</a></code>.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC3offyAA0A11ClientEventO06clientF0_tF":{"name":"off(clientEvent:)","abstract":"<p>Removes handler(s) for a client event.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)off:":{"name":"off(_:)","abstract":"<p>Removes handler(s) based on an event name.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)offWithId:":{"name":"off(id:)","abstract":"<p>Removes a handler with the specified UUID gotten from an <code>on</code> or <code>once</code></p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)on:callback:":{"name":"on(_:callback:)","abstract":"<p>Adds a handler for an event.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC2on10Foundation4UUIDVAA0A11ClientEventO06clientH0_ySayypG_AA0A10AckEmitterCtc8callbacktF":{"name":"on(clientEvent:callback:)","abstract":"<p>Adds a handler for a client event.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/s:8SocketIO0A8IOClientC4once10Foundation4UUIDVAA0A11ClientEventO06clientH0_ySayypG_AA0A10AckEmitterCtc8callbacktF":{"name":"once(clientEvent:callback:)","abstract":"<p>Adds a single-use handler for a client event.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)once:callback:":{"name":"once(_:callback:)","abstract":"<p>Adds a single-use handler for an event.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)onAny:":{"name":"onAny(_:)","abstract":"<p>Adds a handler that will be called on every event.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)removeAllHandlers":{"name":"removeAllHandlers()","abstract":"<p>Removes all handlers.</p>","parent_name":"SocketIOClient"},"Classes/SocketIOClient.html#/c:@M@SocketIO@objc(cs)SocketIOClient(im)setReconnectingWithReason:":{"name":"setReconnecting(reason:)","abstract":"<p>Puts the socket back into the connecting state.","parent_name":"SocketIOClient"},"Classes/SocketAnyEvent.html#/c:@M@SocketIO@objc(cs)SocketAnyEvent(py)event":{"name":"event","abstract":"<p>The event name.</p>","parent_name":"SocketAnyEvent"},"Classes/SocketAnyEvent.html#/c:@M@SocketIO@objc(cs)SocketAnyEvent(py)items":{"name":"items","abstract":"<p>The data items for this event.</p>","parent_name":"SocketAnyEvent"},"Classes/SocketAnyEvent.html#/c:@M@SocketIO@objc(cs)SocketAnyEvent(py)description":{"name":"description","abstract":"<p>The description of this event.</p>","parent_name":"SocketAnyEvent"},"Classes/OnAckCallback.html#/c:@M@SocketIO@objc(cs)OnAckCallback(im)timingOutAfter:callback:":{"name":"timingOut(after:callback:)","abstract":"<p>Completes an emitWithAck. If this isn&rsquo;t called, the emit never happens.</p>","parent_name":"OnAckCallback"},"Classes/SocketAckEmitter.html#/s:8SocketIO0A10AckEmitterC8expectedSbv":{"name":"expected","abstract":"<p>If true, this handler is expecting to be acked. Call <code>with(_: SocketData...)</code> to ack.</p>","parent_name":"SocketAckEmitter"},"Classes/SocketAckEmitter.html#/s:8SocketIO0A10AckEmitterCAcA0A8IOClientC6socket_Si6ackNumtcfc":{"name":"init(socket:ackNum:)","abstract":"<p>Creates a new <code>SocketAckEmitter</code>.</p>","parent_name":"SocketAckEmitter"},"Classes/SocketAckEmitter.html#/s:8SocketIO0A10AckEmitterC4withySayAA0A4Data_pGd_tF":{"name":"with(_:)","abstract":"<p>Call to ack receiving this event.</p>","parent_name":"SocketAckEmitter"},"Classes/SocketAckEmitter.html#/c:@M@SocketIO@objc(cs)SocketAckEmitter(im)with:":{"name":"with(_:)","abstract":"<p>Call to ack receiving this event.</p>","parent_name":"SocketAckEmitter"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)engineQueue":{"name":"engineQueue","abstract":"<p>The queue that all engine actions take place on.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)connectParams":{"name":"connectParams","abstract":"<p>The connect parameters sent during a connect.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)extraHeaders":{"name":"extraHeaders","abstract":"<p>A dictionary of extra http headers that will be set during connection.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC8postWaitSaySSGv":{"name":"postWait","abstract":"<p>A queue of engine.io messages waiting for POSTing</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC14waitingForPollSbv":{"name":"waitingForPoll","abstract":"<p><code>true</code> if there is an outstanding poll. Trying to poll before the first is done will cause socket.io to","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC14waitingForPostSbv":{"name":"waitingForPost","abstract":"<p><code>true</code> if there is an outstanding post. Trying to post before the first is done will cause socket.io to","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)closed":{"name":"closed","abstract":"<p><code>true</code> if this engine is closed.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)compress":{"name":"compress","abstract":"<p>If <code>true</code> the engine will attempt to use WebSocket compression.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)connected":{"name":"connected","abstract":"<p><code>true</code> if this engine is connected. Connected means that the initial poll connect has succeeded.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)cookies":{"name":"cookies","abstract":"<p>An array of HTTPCookies that are sent during the connection.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)fastUpgrade":{"name":"fastUpgrade","abstract":"<p>When <code>true</code>, the engine is in the process of switching to WebSockets.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)forcePolling":{"name":"forcePolling","abstract":"<p>When <code>true</code>, the engine will only use HTTP long-polling as a transport.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)forceWebsockets":{"name":"forceWebsockets","abstract":"<p>When <code>true</code>, the engine will only use WebSockets as a transport.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC11invalidatedSbv":{"name":"invalidated","abstract":"<p><code>true</code> If engine&rsquo;s session has been invalidated.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)polling":{"name":"polling","abstract":"<p>If <code>true</code>, the engine is currently in HTTP long-polling mode.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)probing":{"name":"probing","abstract":"<p>If <code>true</code>, the engine is currently seeing whether it can upgrade to WebSockets.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC7sessionSo10URLSessionCSgv":{"name":"session","abstract":"<p>The URLSession that will be used for polling.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)sid":{"name":"sid","abstract":"<p>The session id for this engine.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)socketPath":{"name":"socketPath","abstract":"<p>The path to engine.io.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)urlPolling":{"name":"urlPolling","abstract":"<p>The url for polling.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)urlWebSocket":{"name":"urlWebSocket","abstract":"<p>The url for WebSockets.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)websocket":{"name":"websocket","abstract":"<p>If <code>true</code>, then the engine is currently in WebSockets mode.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)ws":{"name":"ws","abstract":"<p>The WebSocket for this engine.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(py)client":{"name":"client","abstract":"<p>The client for this engine.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineCAcA0aC6Client_p6client_10Foundation3URLV3urlAA0A21IOClientConfigurationV6configtcfc":{"name":"init(client:url:config:)","abstract":"<p>Creates a new engine.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)initWithClient:url:options:":{"name":"init(client:url:options:)","abstract":"<p>Creates a new engine.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)connect":{"name":"connect()","abstract":"<p>Starts the connection to the server.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)didErrorWithReason:":{"name":"didError(reason:)","abstract":"<p>Called when an error happens during execution. Causes a disconnection.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)disconnectWithReason:":{"name":"disconnect(reason:)","abstract":"<p>Disconnects from the server.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)doFastUpgrade":{"name":"doFastUpgrade()","abstract":"<p>Called to switch from HTTP long-polling to WebSockets. After calling this method the engine will be in","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)flushWaitingForPostToWebSocket":{"name":"flushWaitingForPostToWebSocket()","abstract":"<p>Causes any packets that were waiting for POSTing to be sent through the WebSocket. This happens because when","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)parseEngineData:":{"name":"parseEngineData(_:)","abstract":"<p>Parses raw binary received from engine.io.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)parseEngineMessage:":{"name":"parseEngineMessage(_:)","abstract":"<p>Parses a raw engine.io packet.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC10setConfigsyAA0A21IOClientConfigurationVF":{"name":"setConfigs(_:)","abstract":"<p>Called when the engine should set/update its configs from a given configuration.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/c:@M@SocketIO@objc(cs)SocketEngine(im)write:withType:withData:":{"name":"write(_:withType:withData:)","abstract":"<p>Writes a message to engine.io, independent of transport.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC19websocketDidConnecty10Starscream03WebA6Client_p6socket_tF":{"name":"websocketDidConnect(socket:)","abstract":"<p>Delegate method for connection.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC22websocketDidDisconnecty10Starscream03WebA6Client_p6socket_s5Error_pSg5errortF":{"name":"websocketDidDisconnect(socket:error:)","abstract":"<p>Delegate method for disconnection.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html#/s:8SocketIO0A6EngineC10URLSessionySoADC7session_So7NSErrorCSg25didBecomeInvalidWithErrortF":{"name":"URLSession(session:didBecomeInvalidWithError:)","abstract":"<p>Delegate called when the session becomes invalid.</p>","parent_name":"SocketEngine"},"Classes/SocketEngine.html":{"name":"SocketEngine","abstract":"<p>The class that handles the engine.io protocol and transports."},"Classes/SocketAckEmitter.html":{"name":"SocketAckEmitter","abstract":"<p>A class that represents a waiting ack call.</p>"},"Classes/OnAckCallback.html":{"name":"OnAckCallback","abstract":"<p>A class that represents an emit that will request an ack that has not yet been sent."},"Classes/SocketAnyEvent.html":{"name":"SocketAnyEvent","abstract":"<p>Represents some event that was received.</p>"},"Classes/SocketIOClient.html":{"name":"SocketIOClient","abstract":"<p>Represents a socket.io-client.</p>"},"Classes/SSLSecurity.html":{"name":"SSLSecurity","abstract":"<p>A wrapper around Starscream&rsquo;s SSLSecurity that provides a minimal Objective-C interface.</p>"},"Classes/SocketManager.html":{"name":"SocketManager","abstract":"<p>A manager for a socket.io connection.</p>"},"faq.html":{"name":"FAQ"},"12to13.html":{"name":"12to13"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}